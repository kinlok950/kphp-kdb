Copyfast-engine/Copyfast-server

Движок предназначенный для раскидывания файлов на много серверов при помощи p2p-протокола. Copyfast-engine поддерживает только memcache-запрос "stats", memcache-server поддерживает некоторое количество memcache get-запросов. Внимание: сразу после установления подключения обязательно сделать запрос stats или запрос version и только после этого делать другие запросы.

=== Запрос "get [cluster_id@]nodes" === 
Для каждого движка, про который знает copyfast-server возвращает строку
<br>
"{$node_number}: {$node_ip} {$node_port} {$node_id} {$node_binlog_position} {$node_crc64}"

=== Запрос "get [cluster_id@]times" === 
Для каждого движка, про который знает copyfast-server возвращает строку
<br>
"{$last_binlog_update_time} {$node_ip} {$node_port} {$node_id} {$node_binlog_position} {$node_number}"

=== Запрос "get [cluster_id@]failed_nodes" ===
Для каждого движка, который copyfast-server предполагает упавшим (на данный момент это значит, что движок 6 минут не подавал признаков жизни) возвращает строку
<br>
"{$node_number}: {$node_ip} {$node_port} {$node_id} {$node_binlog_position} {$node_crc64}"

=== Запрос "get number{$id}" ===
По $id движка возвращает его номер.

=== Запрос "get node{$node_number}"===
Возвращает статистику соответствующего движка в human-readable формате

=== Запрос "get node_updates{$node_number}" ===
В первый раз делает обращение к соответствующему движку и возвращает "Request sent"
<br>
Во второй возвращает до 100000 последний действий движка

=== Запрос "get set_delays{$medium_delay}_{$slow_delay}" ===
Устанавливает таймауты для запросов по средним и медленным связям. По умолчанию значения равны 0.5 и 10 секунд соответственно.

=== Запрос "get [cluster_id@]nodes_search"===
Запрос
<br>
get nodes_search{$type}{$sign}{$failed}{$number}_{$value}[#{$limit}]
<br>
выбирает узлы по полю. 
<br>
{$type} имеет значение 'd', если поле 32-битное, 'l', если 64-битное, 'f', если вещественное.
<br>
{$sign} имеет значение '&lt;', '&gt;' или '='.
<br>
{$failed} имеет значение 'A', если надо рассматривать все движки или 'F', если только не упавшие.
<br>
{$number} идентификатор поля, по которому проводится отсев. Список идентификаторов см. ниже.
<br>
{$value} значение, с которым сравнивается значение соответствующего поля.
<br>
Для каждого из подходящих узлов возвращается строка следующего вида:
<br>
{$node_number} {$ip} {$port} {$value}
<br>
Выдаётся не более {$limit} строчек. Последней строкой выдаётся общее количество подходящих движков.

Пример: "get nodes_searchl&lt;A0_{$binlog_position}" возвратит список всех узлов, которые ещё не добрались до {$binlog_position}

=== Запрос "get node_stats{$start_node_number}_{$limit}_{$int_mask}_{$long_mask}_{$double_mask}" ===
Для каждого узла с номерами {$start_node_number} ... {$start_node_number} + {$limit} - 1 возвращает строку с запрошенными данными. 

Маска получается, если сложить 2^{$field_id} для каждого необходимого поля. Заметьте, что для полей разных типов маски отдельные. Идентификаторы полей можно посмотреть ниже.

В возвращаемой строке для каждого движка первое число это номер движка, далее по порядку запрошенные данные. Порядок следующий: вначале 32-битные данные в порядке увеличения идентификатора, затем 64-битные и в конце вещественные.

=== Параметры запуска copyfast-engine===
Основным параметрами при запуске является список реплицируемых файлов. Каждый файл передаётся в виде [+/-][@][cluster_id:]file_name. Где + обозначает master-реплику, а - или отсутствие знака - обычную. @ обозначает, что это не просто реплицируемый файл, а манифест. Манифест это такой реплицируемый файл, который одновременно с этим ещё и интерпретируется. Каждая строка интерпретируется по отдельности. Если её интерпретировать не удаётся, она игнорируется. В данный момент поддерживается всего две команды внутри манифеста start [cluster_id:]filename и stop [cluster_id:]filename, соответственно начинающие и прекращающие реплицировать данный файл. Внимание, если два раза добавить один и тот же файл, то удалять его тоже потом надо два раза.

=== Список идентрификаторов полей ===
Целочисленные 32 битные:
{|
|-
| идентификатор || данные
|-
| 0 || количество детей
|-
| 1 || количество родителей
|-
| 2 || количество медленных связей
|-
| 4 || количество средних связей
|-
| 5 || количество быстрых связей
|}
Целочисленные 64 битные:
{|
|-
| идентификатор || данные
|-
| 0 || размер бинлога
|-
| 4 || количество данных, полученных по медленным связям
|-
| 5 || количество данных, полученных по средним связям
|-
| 6 || количество данных, полученных по быстрым связям
|-
| 7 || crc64
|-
| 8 || наибольший известный размер файла у друзей
|}
Вещественные данные:

{|
|-
| идентификатор || данные
|-
| 0 || Момент последнего обновления бинлога
|-
| 2 || Время, потраченное на чтение с диска
|-
| 3 || Время, потраченное на запись на диск
|}
