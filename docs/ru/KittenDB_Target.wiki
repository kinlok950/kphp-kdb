[[KittenDB.wiki|KittenDB]] (Target/PeopleSearch) - движок, предназначенный для поиска по людям и работы с таргетированными объявлениями.

Все числа, используемые как значения параметров в движке, могут принимать значения от 0 до 2^31-1, если не сказано обратного. 

==get==
Допустимые значения:

<code>"user_groups{$user_id}"</code>
<br>
Возвращает число групп, в которых состоит пользователь $user_id, а далее список групп пользователя в порядке возрастания их номеров (приложениям соответствуют отрицательные номера групп).

<code>"ad_enable{$ad_id}"</code>
<br>
Включает объявление.

<code>"user_ads{$user_id}[#$limit[,$flags[_{$and_mask}:{$xor_mask}[_{$cat_mask}]]]]"</code>
<br>
Показывает объявления (не более limit, по умолчанию - 32), старгетированные на данного юзера. id перечисляются через запятую. Если flags равно 1, то кроме id объявлений даются также ожидаемые их стоимости, целые числа expected_gain * 1e6: id1,gain1,id2,gain2,...; бит flags=2 добавляет в список также цены объявлений, бит flags=4 - информацию о том, сколько раз было показано объявление данному пользователю, бит flags=8 означает использование нового алгоритма выбора объявлений вместо старого (с учётом числа показов и по уточнённой формуле), бит flags=16 при установке разрешает выбирать только объявления, которые можно показывать на внешних сайтах, бит flags=32 игнорирует значение домена.

Поля $and_mask и $xor_mask, если заданы, ограничивают выбор объявлений согласно их значению sites_mask: учитываются только те объявления, у которых (ad.sites_mask ^ xor_mask) & and_mask == 0.
<br>
Бит flags=16 не должен использоваться одновременно с этими полями. Если этих полей нет, используются следующие умолчания: <tt>254:0</tt>, если не установлен flags=16, и <tt>255:1</tt>, если установлен flags=16.

Поле $cat_mask устанавливает 64-битную битовую маску разрешённых категорий объявлений. Бит 0 разрешает объявления без категории и с категориями больше 63, биты 1-63 отвечают за категории с 1 по 63. Умолчание равно -1 (можно всё). Подкатегории не учитываются.

<code>"ad_enable{$ad_id}_{$price}"</code>
<br>
Включает объявление с указанной ценой.  Цена может быть отрицательной, это означает что у объявления оплачиваются не клики, а показы.

<code>"ad_disable{$ad_id}"</code>
<br>
Выключает объявление.

<code>"ad_clicks{$ad_id}"</code>
<br>
Возвращает одно целое число - количество кликов.

<code>"ad_ctr{$ad_id}"</code>
<br>
Возвращает некую магическую величину, используемую при подсчете рекомендованной цены за клик.

<code>"ad_sump{$ad_id}"</code>
<br>
Возвращает некую магическую величину, используемую при подсчете рекомендованной цены за клик.

<code>"ad_ctrsump{$ad_id}"</code>
<br>
Возвращает некую магическую величину, используемую при подсчете рекомендованной цены за клик.

<code>"ad_setctr{$ad_id}:{$clicks},{$views}"</code>
<br>
Параметры $clicks и $views - 64-битные целые, означают количество кликов и показов соответственно. Сообщает об изменениях ctr всем серверам. Используется в обертке $inc->adjustAdCtr($ad_id).

<code>"ad_setsump{$ad_id}:{$sump0},{$sump1},{$sump2}"</code>
<br>
Параметры $sump0, $sump1, $sump2 - 64-битные целые, умноженные на 2^32 вещественные числа. Сообщает об изменениях ctr всем серверам. Используется в обертке $inc->adjustAdCtr($ad_id).

<code>"ad_setctrsump{$ad_id}:{$clicks},{$views},{$sump0},{$sump1},{$sump2}"</code>
<br>
Параметры $clicks, $views, $sump0, $sump1, $sump2 - 64-битные целые. Эквивалентно одновременному выполнению <code>ad_setctr</code> и <code>ad_setsump</code>.

<code>"ad_setaud{$ad_id}:{$aud}"</code>
<br>
Параметр $aud - 32-битное целые, означает общий размер аудитории, для разлива по всем серверам.

<code>"ad_money{$ad_id}"</code>
<br>
Возвращает одно целое число - бюджет объявления.

<code>"ad_views{$ad_id}"</code>
<br>
Возвращает одно целое число - количество показов.

<code>"ad_limited_views{$ad_id},{$max_views}"</code>
<br>
Ограничивает число показов объявления на пользователя константой $max_views (только для объявлений за показы). Допустимые значение $max_views - это 0 (не ограничивать) и 100.

<code>"ad_views_rate_limit{$ad_id},{$max_views}"</code>
<br>
Ограничивает число показов объявления $ad_id на всех пользователей величиной $max_views*1000 за каждые пять минут. Если $max_views = 0, то объявление не будет показываться, хотя и останется активным. Значения, большие 65535, считаются бесконечно большими.

<code>"ad_sites{$ad_id},{$sites_mask}"</code>
<br>
Здесь $sites_mask -- значение от 0 до 255, которое записывается в маску разрешенных внешних сайтов для данного объявления. Раньше эта функция принимала только значения 0 или 1. Для совместимости младший бит $sites_mask должен иметь тот же смысл, что и старый параметр $allow_sites: 0 означает, что объявление нельзя показывать на внешних сайтах, 1 означает, что можно. Если есть, скажем, 31 непересекающаяся категория объявлений, их можно закодировать в $sites_mask, использовав старшие 5 битов для хранения нужного значения (0--31). Это более компактно, чем использование по одному биту для каждой категории объявлений. 

По умолчанию у всех создаваемых объявлений $sites_mask = 0.

<code>"ad_recent_views{$ad_id}"</code>
<br>
Возвращает одно число - количество показов объявления $ad_id за последние пять минут.

<code>"recent_views_stats#[R]{$limit}"</code>
<br>
Возвращает 2N+1 число - первое из них - это общее число показов за последние 5 минут, далее следуют пары (ad_id,recent_views), упорядоченные в порядке убывания recent_views (с модификатором R) или в порядке возрастания ad_id (без R). Возвращается не более $limit таких пар.

<code>"recent_ad_viewers{$ad_id}#[R]{$limit}"</code>
<br>
Возвращает количество пользователей, просмотревших объявление $ad_id за последние 5 минут, а также список этих пользователей - но не более $limit штук. Если указан модификатор R, возвращаются пары (user_id,cnt), упорядоченные по убыванию cnt (количества показов данного объявлению данному пользователю за последние 5 минут). Если нет, то список упорядочивается по user_id.

<code>"recent_user_ads{$user_id}#[R]{$limit}"</code>
<br>
Возвращает количество объявлений, показанных пользователю $user_id за последние 5 минут, а также список этих объявлений - но не более $limit штук. Если указан модификатор R, возвращаются пары (ad_id,cnt), упорядоченные по убыванию cnt (количества показов данного объявлению данному пользователю за последние 5 минут). Если нет, то список упорядочивается по ad_id.

<code>"ad_setfactor{$ad_id}:{$factor}"</code>
<br>
Устанавливает учетный сомножитель для объявления $ad_id в значение $factor / 10^6. Допустимые значения этого параметра - от 10^5 до 10^6, т.е. от 10% до 100%. Следует вычислять, исходя из скидки рекламодателя: если скидка 35%, то правильное значение $factor --- 650000. По умолчанию учетный сомножитель равен 1.0.

<code>"ad_setdomain{$ad_id}:{$domain}"</code>
<br>
Устанавливает домен объявления (в пределах от 0 до 2*10^9, специальное значение 0 - домен отсутствует). При построении списка выдаваемых объявлений targ-engine не будет никогда выводить объявления с одинаковым доменом.

<code>"ad_setgroup{$ad_id}:{$group}"</code>
<br>
Устанавливает группу, которую рекламирует объявление (в пределах от -2*10^9 до 2*10^9, специальное значение 0 - группа отсутствует). При построении списка выдаваемых объявлений пользователя targ-engine не добавляет объявление в список, если пользователь уже состоит в указанной группе.

<code>"ad_setcategories{$ad_id}:{$category},{$subcategory}"</code>
<br>
Устанавливает категорию и подкатегорию объявления (в пределах от 0 до 1023, специальное значение 0 - объявление не категоризировано). При новой схеме генерации списка показываемых пользователю объявлений ненулевые значения категорий учитываются targ-engine согласно данным, полученным из weights-engine.

<code>"ad_info{$ad_id}"</code>
<br>
Возвращает через запятую 29 параметров объявления: <code> ad_id, flags, price, users, views, clicked, click_money, неважно, неважно, неважно, неважно, expected_gain*1e9, ext_users, неважно, l_sump0, l_sump1, l_sump2, g_sump0, g_sump1, g_sump2, lambda, delta, recent_views, recent_views_limit, factor, domain, group, category, subcategory</code>
<br>
flags - флаги (биты с 17 по 24 содержат маску сайтов, 0-based)
<br>
price - цена за клик;
<br>
users - аудитория, на которую старгетировано объявление;
<br>
views - количество просмотров;
<br>
clicked - количество кликнувших;
<br>
click_money - бюджет кампании;
<br>
expected_gain - наша ожидаемая прибыль с показа, умноженная на 1е9;
<br>
ext_users - залитый из php общий размер аудитории;
<br>
lambda - математическое ожидание того, во сколько раз объявление кликается чаще среднего, delta - дисперсия;
<br>
recent_views - показы за последние 5 минут в данном куске;
<br>
recent_views_limit - ограничение на показы за 5 минут на данный кусок;
<br>
factor - учетный сомножитель, умноженный на 1e6;

<code>"ad_query{$ad_id}"</code>
<br>
Возвращает поисковый запрос, по которому старгетировано объявление.

<code>"user_click{$user_id},{$ad_id},{$price}"</code>
<br>
Сообщает движку что юзер $user_id кликнул по объявлению $ad_id с ценой $price.
<br>
Если цена 0, запрос сообщает, что юзер кликнул на "не показывать мне больше это объявление".

<code>"user_view{$user_id},{$ad_id}"</code>
<br>
Сообщает движку о том, что юзер $user_id посмотрел на объявление{$ad_id}.

<code>"deletegroup{$group_id}"</code>
<br>
Удаляет всех пользователей из группы {$group_id}.

<code>"flags{$user_id}"</code>
<br>
Возвращает флаги пользователя - битовые флаги (+1 - загружена фотография, +2 - использует приложения, +4 - платит деньги).

<code>"user_clicked_ad{$user_id},{$ad_id}"</code>
<br>
Возвращает 0, если пользователь не кликал по данному объявлению, положительное число - если кликнул, отрицательное число - если закрыл крестиком (т.е. был запрос user_click с нулевой ценой).

Также через get выполняются "поисковые" запросы.

===Остальное===

[[KittenDB_Target_Search.wiki|KittenDB Target Search]]
[[KittenDB_Target_UserInfo.wiki|KittenDB Target UserInfo]]
