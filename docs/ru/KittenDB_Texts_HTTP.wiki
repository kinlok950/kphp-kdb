Для работы с longpoll-интерфейсом text-engine надо делать POST-запросы на URL вида <tt>/im</tt>(далее произвольные символы).

Параметры:
{|
! Название !! Значение
|-
| <tt>act</tt>* || <tt>a_check</tt>
|-
| <tt>key</tt>* || 40-символьный ключ для контроля доступа
|-
| <tt>ts</tt> || 32-битное число в десятичной записи - последний известный timestamp
|-
| <tt>mode</tt> || 32-битное число с режимом доступа; по умолчанию 0; +1 - возвращать кладжи в виде строки; +2 - возвращать непоисковые кладжи в виде json-массива; +4 - возвращать поисковые кладжи в json-массиве; +8 - возвращать расширенные события с кодами 100..191 вместе с сохраненной json-строкой; +16 - использовать persistent history вместо обычной; +32 -- если используется обычная history, возвращать также pts (persistent history timestamp); +64 -- не занулять дополнительный параметр для событий типа 8 (online)
|-
| <tt>wait</tt> || целое число от 0 до 120 -- максимальное число секунд задержки до ответа (если в течение указанного интервала не происходит ни одного события, возвращается пустой ответ), по умолчанию 0
|}

В случае "успеха" (т.е. корректно разобранного запроса) возвращается результат типа <tt>text/json</tt> в кодировке <tt>utf8</tt> с http-кодом 200.
Есть два типа ответов:
* <tt>{"failed":</tt>''error_code''<tt>}</tt> --- возвращается в тех случаях, если запрос построен правильно, однако произошла ошибка контроля доступа или что-либо подобное. На настоящий момент определены коды ошибок от 1 до 3.
** Ошибка 1 -- ошибка при получении истории с переданного timestamp (например, если с момента, соответствующему переданному timestamp, произошло слишком много событий и часть из них уже была забыта)
** Ошибка 2 -- недействительный или устаревший key (например, пользователь изменил пароль)
** Ошибка 3 -- у пользователя нет timestamp'а (например, пользователь не существует)
* <tt>{"ts":</tt>''new_timestamp'',<tt>"updates":[</tt><i>update<sub>1</sub></i>,...,<i>update<sub>k</sub></i><tt>]}</tt> --- возвращается текущий timestamp (если он больше, чем переданный ts + количество возращённых апдейтов, надо повторить запрос с предыдущим ts + количество возвращённых апдейтов), а также список обновлений, начиная с переданного ts.
* <tt>{"ts":</tt>''new_timestamp'',<tt>"pts":</tt>''new_persistent_timestamp'',<tt>"updates":[</tt>...<tt>]}</tt> --- используется, если установлен флаг +32, но не установлен +16.

Сейчас за один раз можно получить не более 256 апдейтов.

=== Формат элементов списка обновлений ===
* <tt>[''action_type'',''local_id'',''flags'']</tt>
* <tt>[''action_type'',''local_id'',''flags'',''peer_id'']</tt>
* <tt>[''action_type'',''local_id'',''flags'',''peer_id'',''date'',"''title''","''message''"]</tt>
* <tt>[''action_type'',''local_id'',''flags'',''peer_id'',''date'',"''title''","''message''","''kludges''"]</tt>
* <tt>[''action_type'',-1,-1]</tt> (для action_type=100..191)
* <tt>[''action_type'',custom_json_string]</tt> (для action_type=100..191, если mode=8)
Первые три числа всегда такие же, как для соответствующих событий из <tt>get history$uid...</tt>, см. [[KittenDB_Texts_Extra.wiki|KittenDB Texts:Список дополнительных функций]]. Остальные два числа и строки относятся к сообщению, упомянутому в событии, и возвращаются только при action_type=4,5, и иногда - 3 и 1.
