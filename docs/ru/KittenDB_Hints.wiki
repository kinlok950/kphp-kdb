''KittenDB Hints'' --- предназначен для поиска объектов какого-либо
пользователя (таких как друзья, группы, аудиозаписи и т.д.) по префиксам
ключевых слов. При выдаче объекты обычно сортируются по одному из рейтингов,
которые хранятся вместе с объектами. Рейтинги нумеруются с нуля.

В зависимости от настроек движка рейтинг объектов бывает фиксированным
целочисленным либо автоматически экспоненциально затухающим во времени
с периодом полураспада по умолчанию равным четырём неделям.

Движок работает с текстами в кодировке UTF-8. Передавать нужно только основное
название, не передавая транслитерацию.

==Интерфейс==
Движок поддерживает memcached интерфейс и rpc-TL интерфейс. Описание
поддерживаемых rpc-TL запросов можно найти в схеме hints/hints.tl.

==Список доступных функций==
Везде $uid обозначает пользователя, у которого изменилась/добавилась/удалилась
информация. $type - тип изменившегося объекта (целое число от 1 до 255),
$obj_id - уникальный идентификатор объекта данного типа, положительное
31-битное число.

===Включение/выключение изменения рейтинга объектов===
<code>set("user_rating_state{$uid}", "{$flag}")</code>
<br>
Прекращает (при $flag = 0) или возобновляет (при $flag = 1) изменение
рейтингов объектов соответствующими запросами. Если изменение рейтингов
прекращено, то возвращаемые объекты сортируются исключительно по их $type и
$obj_id. При возобновлении изменения рейтингов объектам вернутся рейтинги,
которые были на момент прекращения, с учётом прошедшего времени.

===Обнуление рейтинга всех объектов пользователя===
<code>set("user_rating_nullify{$uid}", "")</code>
<br>
Обнуляет рейтинги всех объектов пользователя $uid. При этом изменение рейтинга
при поступлении новых событий продолжается.

===Проверка наличия информации о пользователе===
<code>get("user_info{$uid}")</code>
<br>
Данный метод используется при ленивой инициализации движка данными.
Возвращает -1, если информация об пользователе $uid отсутствует, и её
необходимо загрузить. Перед началом инициализации нужно выполнить команду
<br>
<code>set("user_info{$uid}", -2)</code>, по окончании инициализации -
<br>
<code>set("user_info{$uid}", 1)</code>.
<br>
Возвращает -2, если информация об этом пользователе отсутствует, но
инициализацию производить не нужно.
Возвращает 1, если информация об этом пользователе присутствует и инициализацию
производить не нужно.
В этом случае можно просить подсказки.

===Установка статуса инициализации пользователя===
<code>set("user_info{$uid}", {$flag})</code>
<br>
Используется до и после первоначальной инициализации пользователя. Перед началом
$flag == -2, по окончании инициализации - $flag == 1. В процессе инициализации
для пометки промежуточных стадий можно использовать $flag со значениями от 2 до
13 включительно. В этом случае <code>get("user_info{$uid}")</code> будет
возвращать значение последнего установленного флага.

===Добавление нового объекта для одного пользователя===
<code>set("user_object{$uid},{$type}:{$obj_id}", "{$text}")</code>
<br>
Добавляет в набор объектов пользователя $uid объект типа $type c номером $obj_id.
Для переименования глобальных объектов следует использовать функцию
<br>
<code>set("object_text...")</code>

===Изменение типа объекта для одного пользователя===
<code>set("user_object_type{$uid},{$type}:{$obj_id}", "{$new_type}")</code>
<br>
Изменяет у пользователя $uid у объекта типа $type с номером $obj_id тип на
$new_type.

===Удаление объекта для одного пользователя===
<code>delete("user_object{$uid},{$type}:{$obj_id}")</code>
<br>
Удаляет из объектов пользователя $uid объект типа $type c номером $obj_id.

===Получение текста объекта пользователя===
<code>get("user_object_text{$uid},{$type}:{$obj_id}")</code>
<br>
Возвращает текст объекта типа $type c номером $obj_id пользователя $uid.

===Изменение ключевых слов для данного объекта===
<code>set("object_text{$type}:{$obj_id}", "{$text}")</code>
<br>
Заменяет ключевые слова для глобального объекта типа $type с номером $obj_id
на ключевые слова полученные из $text. Используется при переименовании уже
существующего или создании нового объекта.
При использовании mc-proxy с расширением hints автоматически раскидывается на
все копии движка.
Очень трудоёмкий запрос, поэтому для переименования небольших объектов следует
для каждого пользователя, у которого есть данный объект, вызвать
<br>
<code>set("user_object{$uid},{$type}:{$obj_id}", "{$text}")</code>.

===Изменение типа глобального объекта===
<code>set("object_type{$type}:{$obj_id}", "{$new_type}")</code>
<br>
Изменяет для всех объектов типа $type с номером $obj_id тип на $new_type.
При использовании mc-proxy с расширением hints автоматически раскидывается на
все копии движка.
Очень трудоёмкий запрос, поэтому для изменения типа небольших объектов следует
для каждого пользователя, у которого есть данный объект, вызвать
<br>
<code>set("user_object_type{$uid},{$type}:{$obj_id}", "{$new_type}")</code>.

===Удаление объекта===
<code>delete("object_text{$type}:{$obj_id}")</code>
<br>
Удаляет глобальный объект с типом $type и номером $obj_id. Объект удаляется для
всех пользователей.
Очень трудоёмкий запрос, поэтому для удаления небольших объектов следует
для каждого пользователя, у которого есть данный объект, вызвать
<br>
<code>delete("user_object{$uid},{$type}:{$obj_id}")</code>.

===Изменение рейтинга объекта===
<code>set("user_object_rating{$uid},{$type}:{$obj_id}[*{$rating_num}]", "{$new_rating}")</code>
<br>
Изменяет рейтинг с номером $rating_num (по умолчанию 0) объекта пользователя
$uid типа $type c номером $obj_id на значение $new_rating, $new_rating -
вещественное число.

===Увеличение рейтинга объекта===
<code>increment("user_object{$uid},{$type}:{$obj_id}[*{$rating_num}]", {$cnt})</code>
<br>
Увеличивает рейтинг с номером $rating_num (по умолчанию 0) объекта пользователя
$uid типа $type c номером $obj_id на $cnt условных единиц. Возвращает "1", если
рейтинг увеличен и "NOT FOUND" в противном случае.

===Получение подсказок===
<code>get("user_hints[_latin]{$uid}[,{$res_type}][#{$res_cnt}][*{$rating_num}]({$word1}+{$word2}+...)")</code>
<br>
Производит поиск в наборе объектов пользователя $uid по ключевым словам $word1,
$word2, ... . Возвращает не более $res_cnt объектов типа $res_type.
Если $res_type не указан, то возвращаются объекты всех типов. Если $res_cnt не
указан, то возвращаются все объекты, подходящие под запрос. Результат
возвращается в следующем виде:
<br>
$found_cnt,$type1,$obj_id1,$type2,$obj_id2, ... .
<br>
Если указан суффикс "_latin", то к запросу не применяется ни транслитерация, ни
корректировка раскладки, ни какие-либо другие преобразования.

===Получение подсказок с рейтингом===
<code>get("user_hints_rating[_latin]{$uid}[,{$res_type}][#{$res_cnt}][*{$rating_num}]({$word1}+{$word2}+...)")</code>
<br>
Производит поиск в наборе объектов пользователя $uid по ключевым словам $word1,
$word2, ... . Возвращает не более $res_cnt объектов типа $res_type.
Если $res_type не указан, то возвращаются объекты всех типов. Если $res_cnt не
указан, то возвращаются все объекты, подходящие под запрос. Результат
возвращается в следующем виде:
<br>
$found_cnt,$type1,$obj_id1,$obj1_rating,$type2,$obj_id2,$obj2_rating, ... .
<br>
Рейтинг возвращается в виде вещественного числа с шестью знаками после запятой.
Разделитель целой и дробной части - точка. {$rating_num} - номер возвращаемого
рейтинга, по умолчанию 0.
Если указан суффикс "_latin", то к запросу не применяется ни транслитерация,
ни корректировка раскладки, ни какие-либо другие преобразования.

===Получение подсказок с пояснениями===
<code>get("user_hints_text[_latin]{$uid}[,{$res_type}][#{$res_cnt}][*{$rating_num}]({$word1}+{$word2}+...)")</code>
<br>
Производит поиск в наборе объектов пользователя $uid по ключевым словам $word1,
$word2, ... . Результат возвращается в следующем виде:
<br>
$found_cnt,$type1,$obj_id1,$obj1_text,$type2,$obj_id2,$obj2_text, ... .
<br>
Если указан суффикс "_latin", то к запросу не применяется ни транслитерация, ни
корректировка раскладки, ни какие-либо другие преобразования. Текст
возвращается в преобразованном виде, подготовленном для выполнения поисковых
запросов.

===Получение подсказок с рейтингом и пояснениями===
<code>get("user_hints_full[_latin]{$uid}[,{$res_type}][#{$res_cnt}][*{$rating_num}]({$word1}+{$word2}+...)")</code>
<br>
Производит поиск в наборе объектов пользователя $uid по ключевым словам $word1,
$word2, ... . Результат возвращается в следующем виде:
<br>
$found_cnt,$type1,$obj_id1,$obj1_rating,$obj1_text,$type2,$obj_id2,$obj2_rating,$obj2_text, ... .
<br>
Если указан суффикс "_latin", то к запросу не применяется ни транслитерация, ни
корректировка раскладки, ни какие-либо другие преобразования.


===Сортировка объектов пользователя по рейтингу===
Движок умеет сортировать переданный список объектов по имеющемуся в движке
рейтингу. Список объектов передаётся в движок при помощи get-запроса, результат
получается парным set-запросом. Операции нужно выполнять последовательно,
используя одно и то же соединение.

<code>set(sort_by_rate{$uid}_{$random_tag}, $query)</code>
<br>
$random_tag - случайное целое 32х битное число.
<br>
$query - запрос, выглядящий следующим образом.
<br>
{$uid}[*{$rating_num}][#{$res_cnt}],$type1,$obj_id1,$type2,$obj_id2,...,$typen,$obj_idn
<br>
$uid - id пользователя,
<br>
$rating_num - номер рейтинга, по которому осуществляется сортировка, по умолчанию 0.
<br>
$res_cnt - максимальное число объектов, которое может быть возвращено.

<code>get(sort_by_rate{$uid}_{$random_tag})</code>
<br>
$random_tag - должен совпадать с $random_tag, который был указан в
соответствующей операции set. Ответ возвращается в виде
<br>
$found_cnt,$type1,$obj_id1,$type2,$obj_id2,... .

===Сортировка объектов случайным образом с учётом рейтинга===
Движок умеет рандомизировать порядок в переданном списке объектов с учётом
имеющегося в движке рейтинга. Список объектов передаётся в движок при помощи
get-запроса, результат получается парным set-запросом. Операции нужно
выполнять последовательно, используя одно и то же соединение.

<code>set(sort_by_rand{$uid}_{$random_tag}, $query)</code>
<br>
$random_tag - случайное целое 32х битное число.
<br>
$query - запрос, выглядящий следующим образом.
<br>
{$uid}[*{$rating_num}][#{$res_cnt}],$type1,$obj_id1,$type2,$obj_id2,...,$typen,$obj_idn
<br>
$uid - id пользователя,
<br>
$rating_num - номер рейтинга, по которому осуществляется сортировка,
<br>
$res_cnt - наибольшее число объектов, которое может быть возвращено.

<code>get(sort_by_rand{$uid}_{$random_tag})</code>
<br>
$random_tag - должен совпадать с $random_tag, который был указан в
соответствующей операции set. Ответ возвращается в виде
<br>
$found_cnt,$type1,$obj_id1,$type2,$obj_id2,... .


===Увеличение рейтинга объекта за счёт уменьшения рейтинга других объектов===
<code>set("user_object_winner{$uid},{$type}:{$winner_id}*{$rating_num}", "{$n},{$loser_id1},...,{$loser_idn}")</code>
<br>
Увеличивает рейтинг объекта {$winner_id} типа {$type} пользователя {$uid},
одновременно уменьшая рейтинги объектов {$loser_id1},...,{$loser_idn} того же
типа и пользователя.


==Rating-engine==
Rating-engine является разновидностью hints-engine, которая умеет делать всё,
что умеет hints, кроме "поиска объектов какого-то пользователя по префиксам
ключевых слов", то есть считать рейтинги объектов пользователя. Имеет
совместимый с hints бинлог и поддерживает все те же запросы, что и
hints-engine, за исключением
<br>
<code>set("object_text{$type}:{$obj_id}", "{$text}")</code>.
<br>
Весь передаваемый движку текст игнорируется, поэтому лучше его вообще не
передавать. Дополнительно поддерживается следующий запрос.

===Получение подсказок, отсортированных случайным образом===
<code>get("user_hints_rand{$uid}[,{$res_type}][#{$res_cnt}][*{$rating_num}]($exc_type_1,$exc_obj_id_1,$exc_type_2,$exc_obj_id_2,...,$exc_type_n,$exc_obj_id_n)")</code>
<br>
Производит поиск в наборе объектов пользователя $uid, за исключением объектов
<code>$exc_type_i, $exc_obj_id_i (1 &lt;= i &lt;= n)</code>. Объекты отсортированы
случайным образом с учётом их рейтинга. Возвращает не более $res_cnt объектов
типа $res_type. Если $res_type не указан, то возвращаются объекты всех типов.
Если $res_cnt не указан, то возвращаются все объекты, подходящие под запрос.
Возвращает список объектов через запятую в следующем виде:
<br>
$found_cnt,$type1,$obj_id1,$type2,$obj_id2, ... .
